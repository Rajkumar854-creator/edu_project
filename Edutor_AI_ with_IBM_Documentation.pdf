Project Documentation
Project Title
Edutor AI with IBM
1. Introduction
Project Title: Edutor AI with IBM
Team ID: rajkumardhanapal96@gmail.com
Team Leader: Rajkumar D- rajkumardhanapal96@gmail.com
Team Members:
1) Sachindra M-sachindra.m1368@gmail.com
2) Sree haran Sanjay N K-sreeharansreesanjay@gmail.com
3) Judah zephaniah Samson R-judahzephaniah8@gmail.com
2. Project Overview
Purpose: This project provides an AI-powered educational assistant that can explain concepts in
detail and generate quiz questions on any topic. It uses IBM Granite 3.2 instruct model to provide
high-quality educational content.
Features: Concept Explanation (detailed explanations with examples) Quiz Generator (MCQ,
True/False, Short Answer with answers) Interactive web interface using Gradio AI-powered
responses using Hugging Face Transformers
3. Architecture
Frontend: Gradio (Python-based UI framework) Backend: Hugging Face Transformers with IBM
Granite 3.2 instruct model Model: ibm-granite/granite-3.2-2b-instruct Frameworks/Libraries:
PyTorch, Transformers, Gradio
4. Setup Instructions
Prerequisites:
- Python 3.9+
- pip / conda
- GPU with CUDA (optional)
Installation Steps:
git clone <your-repo-link> cd Educational-AI-Assistant python -m venv venv source
venv/bin/activate # Windows: venv\Scripts\activate pip install torch gradio transformers
5. Folder Structure
Educational-AI-Assistant/ ?-- app.py # Main application file ?-- requirements.txt # Dependencies
?-- README.md # Project description
6. Running the Application
python app.py Access at: http://localhost:7860
If share=True, a public link will be generated automatically.
7. API Documentation
Functions:
- concept_explanation(concept) ? Detailed explanation
- quiz_generator(concept) ? 5 quiz questions with answers
Endpoints (via Gradio Tabs):
- /Concept Explanation
- /Quiz Generator
8. Authentication
No authentication required (can be added later with Hugging Face API tokens).
9. User Interface
Tab 1: Concept Explanation ? Input: Concept | Output: AI-generated explanation Tab 2: Quiz
Generator ? Input: Topic | Output: Quiz with answers
10. Testing
Tools: Manual testing, Gradio live preview, Hugging Face model tests.
Verification: Tested with various concepts like Neural Networks and Photosynthesis.
11. Screenshots/Demo
Add UI screenshots after running locally.
12. Known Issues
Response time may be slower on CPU Long prompts may be truncated
13. Future Enhancements
Add user authentication Store quizzes in a database Support image-based questions Deploy on
cloud (AWS/GCP)